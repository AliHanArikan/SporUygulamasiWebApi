// <auto-generated />
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Entities.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"), 1L, 1);

                    b.Property<string>("ExcerciseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseVideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("EntityLayer.Entities.ReadyTraining", b =>
                {
                    b.Property<int>("ReadyTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadyTrainingId"), 1L, 1);

                    b.Property<int>("Exercise1")
                        .HasColumnType("int");

                    b.Property<int>("Exercise10")
                        .HasColumnType("int");

                    b.Property<int>("Exercise11")
                        .HasColumnType("int");

                    b.Property<int>("Exercise12")
                        .HasColumnType("int");

                    b.Property<int>("Exercise2")
                        .HasColumnType("int");

                    b.Property<int>("Exercise3")
                        .HasColumnType("int");

                    b.Property<int>("Exercise4")
                        .HasColumnType("int");

                    b.Property<int>("Exercise5")
                        .HasColumnType("int");

                    b.Property<int>("Exercise6")
                        .HasColumnType("int");

                    b.Property<int>("Exercise7")
                        .HasColumnType("int");

                    b.Property<int>("Exercise8")
                        .HasColumnType("int");

                    b.Property<int>("Exercise9")
                        .HasColumnType("int");

                    b.Property<int>("ReadyTrainingInformId")
                        .HasColumnType("int");

                    b.HasKey("ReadyTrainingId");

                    b.ToTable("ReadyTrainings");
                });

            modelBuilder.Entity("EntityLayer.Entities.ReadyTrainingInform", b =>
                {
                    b.Property<int>("ReadyTrainingInformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadyTrainingInformId"), 1L, 1);

                    b.Property<string>("BodyPart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReadyTrainingId")
                        .HasColumnType("int");

                    b.Property<string>("ReadyTrainingInformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.HasKey("ReadyTrainingInformId");

                    b.ToTable("ReadyTrainingInforms");
                });
#pragma warning restore 612, 618
        }
    }
}
